//
// printbaseparaview.edp
// Chris Douglas
// chris.douglas@ladhyx.polytechnique.fr
//
// EXAMPLE USAGE:
//  Print fold solution to single .vtu file:
// mpirun -n 1 FreeFem++-mpi -v 0 printfoldparaview.edp -ffi <FILEIN> -split 2
//
// NOTE: This file should not be changed unless you know what you're doing.
//
load "iovtk"
load "PETSc"
include "solversettings.idp"
include "solvermacros.idp"
// arguments
string foldfilein = getARGV("-ffi", "");
string foldfileout = getARGV("-ffo", foldfilein);
int meshsplit = getARGV("-split",1);
if (mpirank==0){
  string meshfile = readmeshname(workdir + foldfilein + ".fold");
  // Load mesh
  Thg = readmesh(workdir + meshfile + meshext);
  XMhg defu(ub), defu(um), defu(uma);
  restu = 0:XMhg.ndof-1;
  ub[] = loadfold(workdir, foldfilein, meshfile, um[], uma[]);
  cout << "  Saving '" + foldfileout + "_fold_[base,dirmode,adjmode].vtu' in '" + workdir + "'." << endl;
  if (meshsplit != 1){
    meshN Thgs = trunc(Thg, 1, split = meshsplit);
    fespace XMhs(Thgs, Pk);
    XMhs defu(ubs) = defu(ub);
    XMhs defu(ums) = defu(um);
    XMhs defu(umas) = defu(uma);
    savevtk(workdir + foldfileout + "_fold_base.vtu", Thgs, adaptu(ubs), dataname = ParaviewDataName, order = ParaviewOrder);
    savevtk(workdir + foldfileout + "_fold_dirmode.vtu", Thgs, adaptu(ums), dataname = ParaviewDataName, order = ParaviewOrder);
    savevtk(workdir + foldfileout + "_fold_adjmode.vtu", Thgs, adaptu(umas), dataname = ParaviewDataName, order = ParaviewOrder);
  } else {
    savevtk(workdir + foldfileout + "_fold_base.vtu", Thg, adaptu(ub), dataname = ParaviewDataName, order = ParaviewOrder);
    savevtk(workdir + foldfileout + "_fold_dirmode.vtu", Thg, adaptu(um), dataname = ParaviewDataName, order = ParaviewOrder);
    savevtk(workdir + foldfileout + "_fold_adjmode.vtu", Thg, adaptu(uma), dataname = ParaviewDataName, order = ParaviewOrder);
  }
}
